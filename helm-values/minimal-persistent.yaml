# Bitnami Kafka Helm Chart - Minimal with Persistence Configuration
# This configuration combines minimal resources with data persistence

# Global settings
global:
  storageClass: ""

# Listeners configuration (PLAINTEXT - no authentication)
listeners:
  client:
    containerPort: 9092
    protocol: PLAINTEXT
    name: CLIENT
    sslClientAuth: ""
  controller:
    name: CONTROLLER
    containerPort: 9093
    protocol: PLAINTEXT
    sslClientAuth: ""
  interbroker:
    containerPort: 9094
    protocol: PLAINTEXT
    name: INTERNAL
    sslClientAuth: ""
  external:
    containerPort: 9095
    protocol: PLAINTEXT
    name: EXTERNAL
    sslClientAuth: ""

# Kafka configuration
kafka:
  # Resource requests and limits (minimal for development)
  resources:
    requests:
      cpu: 250m
      memory: 1Gi
    limits:
      cpu: 1
      memory: 2Gi

  # Heap size settings (reduced for minimal setup)
  heapOpts: "-Xmx1024m -Xms1024m"

  # Persistence ENABLED for data retention
  persistence:
    enabled: true
    size: 8Gi
    # Use default storage class or specify one
    # storageClass: "standard"
    accessModes:
      - ReadWriteOnce

  # Kafka configuration
  config: |
    # Basic Kafka configuration for development
    offsets.topic.replication.factor=1
    transaction.state.log.replication.factor=1
    transaction.state.log.min.isr=1
    default.replication.factor=1
    min.insync.replicas=1
    
    # Disable SASL authentication (allow connections without username/password)
    sasl.enabled.mechanisms=
    security.inter.broker.protocol=PLAINTEXT
    
    # Reduce log segment size for faster testing
    log.segment.bytes=67108864
    
    # Reduce log retention for development (but still keep data)
    log.retention.hours=168
    log.retention.bytes=1073741824

  # Service configuration
  service:
    type: ClusterIP
    ports:
      client: 9092

# ZooKeeper configuration (disabled - using KRaft mode)
zookeeper:
  enabled: false

# KRaft mode settings - MINIMAL CONFIGURATION
kraft:
  enabled: true

# Controller configuration - MINIMAL (combine controller+broker in same pods)
controller:
  replicaCount: 1             # Only 1 controller pod
  controllerOnly: false       # Make it controller+broker (combined mode)

# Broker configuration - DISABLED (using combined controller+broker mode)
broker:
  replicaCount: 0             # No separate broker pods needed

# External access (disabled for minimal setup, but can be enabled)
externalAccess:
  enabled: false
  service:
    type: NodePort
    ports:
      external: 9094
  autoDiscovery:
    enabled: false

# Metrics and monitoring (disabled for minimal setup)
metrics:
  kafka:
    enabled: false
  jmx:
    enabled: false

# ServiceMonitor for Prometheus (disabled)
serviceMonitor:
  enabled: false

# Volume permissions (enabled since we have persistence)
volumePermissions:
  enabled: true
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 100m
      memory: 128Mi

# Init containers (minimal)
sysctlImage:
  enabled: false

# Log persistence (DISABLED for minimal setup - saves 4Gi storage)
# Server logs are accessible via kubectl logs and don't need persistence for dev
logPersistence:
  enabled: false
