# Bitnami Kafka Helm Chart - Minimal with SASL + SSL
# This configuration adds both authentication and encryption

# Global settings
global:
  storageClass: ""

# Kafka configuration
kafka:
  # Resource requests and limits (minimal for development)
  resources:
    requests:
      cpu: 250m
      memory: 1Gi
    limits:
      cpu: 1
      memory: 2Gi

  # Heap size settings (reduced for minimal setup)
  heapOpts: "-Xmx1024m -Xms1024m"

  # Persistence enabled for data retention
  persistence:
    enabled: true
    size: 8Gi
    accessModes:
      - ReadWriteOnce

  # Kafka configuration
  config: |
    # Basic Kafka configuration for development
    offsets.topic.replication.factor=1
    transaction.state.log.replication.factor=1
    transaction.state.log.min.isr=1
    default.replication.factor=1
    min.insync.replicas=1
    
    # Reduce log segment size for faster testing
    log.segment.bytes=67108864
    
    # Reduce log retention for development
    log.retention.hours=168
    log.retention.bytes=1073741824

  # Listeners configuration with SASL + SSL
  listeners:
    client:
      containerPort: 9093
      protocol: SASL_SSL      # Both SASL authentication + SSL encryption
      name: CLIENT
    controller:
      name: CONTROLLER
      containerPort: 9094
      protocol: PLAINTEXT     # Controller stays plain for simplicity
    interbroker:
      containerPort: 9095
      protocol: PLAINTEXT     # Inter-broker stays plain for simplicity
      name: INTERNAL
    external:
      containerPort: 9096
      protocol: SASL_SSL      # External access with both SASL + SSL
      name: EXTERNAL

  # Service configuration (note the SSL port)
  service:
    type: ClusterIP
    ports:
      client: 9093            # SSL port instead of 9092

# ZooKeeper configuration (disabled - using KRaft mode)
zookeeper:
  enabled: false

# KRaft mode settings - MINIMAL CONFIGURATION
kraft:
  enabled: true

# Controller configuration - MINIMAL (combine controller+broker in same pods)
controller:
  replicaCount: 1             # Only 1 controller pod
  controllerOnly: false       # Make it controller+broker (combined mode)

# Broker configuration - DISABLED (using combined controller+broker mode)
broker:
  replicaCount: 0             # No separate broker pods needed

# SASL Authentication Configuration
sasl:
  client:
    users:
      - "kafka-user"          # Application user
      - "admin-user"          # Admin user  
      - "dev-user"            # Developer user
    passwords:
      - "kafka-password"      # Simple password for dev
      - "admin-password"      # Admin password
      - "dev-password"        # Dev password
  mechanisms:
    - SCRAM-SHA-256          # Secure mechanism
  enabledMechanisms: SCRAM-SHA-256

# TLS/SSL Configuration - AUTO-GENERATED CERTIFICATES
tls:
  type: JKS                  # Java KeyStore format
  autoGenerated:
    enabled: true            # âœ… Auto-generate SSL certificates
    engine: helm             # Use Helm to generate certificates
  password: "changeit"       # Keystore/truststore password

# External access with SSL and authentication
externalAccess:
  enabled: true
  service:
    type: NodePort
    ports:
      external: 9096         # SSL external port
  autoDiscovery:
    enabled: true

# Metrics and monitoring (disabled for minimal setup)
metrics:
  kafka:
    enabled: false
  jmx:
    enabled: false

# ServiceMonitor for Prometheus (disabled)
serviceMonitor:
  enabled: false

# Volume permissions (enabled since we have persistence)
volumePermissions:
  enabled: true
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 100m
      memory: 128Mi

# Init containers (minimal)
sysctlImage:
  enabled: false

# Log persistence (disabled for minimal setup)
logPersistence:
  enabled: false
